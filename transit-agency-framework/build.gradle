plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: rootProject.file("gradle/androidKotlin.gradle")
apply from: rootProject.file("gradle/sdkSetup.gradle")
apply from: rootProject.file("gradle/commonVersions.gradle")

android {
    packagingOptions {
        exclude "win32-x86-64/attach_hotspot_windows.dll"
        exclude "win32-x86/attach_hotspot_windows.dll"
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    android {
        buildFeatures {
            viewBinding true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_livedata_ktx_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_fragment_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ui_ktx_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_test_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestUtil "androidx.test:orchestrator:$androidx_test_version"

    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_compiler_version"

    implementation "com.google.code.gson:gson:$gson_version"
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    implementation "androidx.room:room-ktx:$room_ktx_version"
    kapt "androidx.room:room-compiler:$room_compiler_version"
    androidTestImplementation "androidx.room:room-testing:$room_testing_version"

    implementation project(path: ':transit-agency-domain')
    implementation project(path: ':commons-framework')
    implementation project(path: ':commons-domain')
}